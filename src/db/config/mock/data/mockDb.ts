import {
  AppConfigurationModel,
  CheckoutSessionStatusModel,
  CreditModel,
  PermissionModel,
  RoleModel,
  RolePermissionModel,
  SubscriptionFeatureModel,
  SubscriptionProductModel,
  TenantModel,
  TenantSubscriptionModel,
  TenantSubscriptionProductModel,
  TenantUserInvitationModel,
  TenantUserModel,
  UserModel,
  UserRegistrationAttemptModel,
  UserRoleModel,
} from "@/db/models";
import { PricingModel } from "@/modules/subscriptions/enums/PricingModel";
import { SubscriptionFeatureLimitType } from "@/modules/subscriptions/enums/SubscriptionFeatureLimitType";

type MockDataDto = {
  appConfiguration: AppConfigurationModel[];
  user: UserModel[];
  userRegistrationAttempt: UserRegistrationAttemptModel[];
  tenant: TenantModel[];
  tenantUser: TenantUserModel[];
  tenantUserInvitation: TenantUserInvitationModel[];
  tenantSubscription: TenantSubscriptionModel[];
  tenantSubscriptionProduct: TenantSubscriptionProductModel[];
  credit: CreditModel[];
  role: RoleModel[];
  userRole: UserRoleModel[];
  permission: PermissionModel[];
  rolePermission: RolePermissionModel[];
  checkoutSessionStatus: CheckoutSessionStatusModel[];
  subscriptionProduct: SubscriptionProductModel[];
  subscriptionFeature: SubscriptionFeatureModel[];
};

// Initial mock data
const initialMockData: MockDataDto = {
  appConfiguration: [
    {
      name: "RockStack",
      theme: "zinc",
      authRequireEmailVerification: false,
      authRequireOrganization: false,
      authRequireName: false,
      analyticsSimpleAnalytics: false,
      analyticsPlausibleAnalytics: false,
      analyticsGoogleAnalyticsTrackingId: null,
      subscriptionRequired: false,
      subscriptionAllowSubscribeBeforeSignUp: false,
      subscriptionAllowSignUpBeforeSubscribe: false,
      brandingLogo: null,
      brandingLogoDarkMode: null,
      brandingIcon: null,
      brandingIconDarkMode: null,
      brandingFavicon: null,
      headScripts: null,
      bodyScripts: null,
    },
  ],
  user: [
    {
      id: "1",
      createdAt: new Date(),
      updatedAt: new Date(),
      email: "john@doe.com",
      passwordHash: "abc123",
      firstName: "John",
      lastName: "Doe",
      avatar: null,
      phone: null,
      defaultTenantId: null,
      verifyToken: null,
      locale: null,
      active: true,
      admin: false,
    },
    {
      id: "2",
      createdAt: new Date(),
      updatedAt: new Date(),
      email: "jane@doe.com",
      passwordHash: "abc456",
      firstName: "Jane",
      lastName: "Doe",
      avatar: null,
      phone: null,
      defaultTenantId: null,
      verifyToken: null,
      locale: null,
      active: true,
      admin: false,
    },
    {
      id: "3",
      createdAt: new Date(),
      updatedAt: new Date(),
      email: "admin@email.com",
      passwordHash: "password",
      firstName: "David",
      lastName: "Jones",
      avatar: null,
      phone: null,
      defaultTenantId: null,
      verifyToken: null,
      locale: null,
      active: true,
      admin: true,
    },
  ],
  userRegistrationAttempt: [
    {
      id: "1",
      createdAt: new Date(),
      email: "user@email.com",
      firstName: "First Name",
      lastName: "Last Name",
      slug: "slug",
      token: "token",
      ipAddress: "0.0.0.0",
      company: "Company",
      createdTenantId: null,
    },
  ],
  tenant: [
    {
      id: "1",
      createdAt: new Date(),
      updatedAt: new Date(),
      slug: "test-tenant-1",
      name: "Test Tenant 1",
      icon: null,
      subscriptionId: null,
      active: true,
    },
    {
      id: "2",
      createdAt: new Date(),
      updatedAt: new Date(),
      slug: "test-tenant-2",
      name: "Test Tenant 2",
      icon: null,
      subscriptionId: null,
      active: true,
    },
  ],
  tenantUser: [
    {
      id: "1",
      createdAt: new Date(),
      tenantId: "1",
      userId: "1",
    },
    {
      id: "2",
      createdAt: new Date(),
      tenantId: "1",
      userId: "2",
    },
  ],
  tenantUserInvitation: [
    {
      id: "1",
      tenantId: "1",
      email: "invited@user.com",
      firstName: "Invited first name",
      lastName: "Invited last name",
      pending: true,
      createdUserId: null,
      fromUserId: null,
    },
  ],
  tenantSubscription: [
    {
      id: "1",
      tenantId: "1",
      stripeCustomerId: "stripe-customer-id-1",
    },
  ],
  tenantSubscriptionProduct: [
    {
      id: "1",
      createdAt: new Date(),
      tenantSubscriptionId: "1",
      subscriptionProductId: "1",
      cancelledAt: null,
      endsAt: null,
      stripeSubscriptionId: "stripe-id-1",
      quantity: null,
      fromCheckoutSessionId: null,
      currentPeriodStart: null,
      currentPeriodEnd: null,
    },
    {
      id: "2",
      createdAt: new Date(),
      tenantSubscriptionId: "1",
      subscriptionProductId: "2",
      cancelledAt: null,
      endsAt: null,
      stripeSubscriptionId: "stripe-id-2",
      quantity: null,
      fromCheckoutSessionId: null,
      currentPeriodStart: null,
      currentPeriodEnd: null,
    },
  ],

  credit: [
    {
      id: "1",
      createdAt: new Date(),
      tenantId: "1",
      userId: "1",
      amount: 1,
      type: "credit-name-1",
      objectId: "object-id-1",
    },
    {
      id: "2",
      createdAt: new Date(),
      tenantId: "1",
      userId: "1",
      amount: 2,
      type: "credit-name-2",
      objectId: "object-id-2",
    },
  ],
  role: [
    {
      id: "1",
      createdAt: new Date(),
      updatedAt: new Date(),
      name: "Role 1",
      description: "Role 1 description",
      type: "admin",
      assignToNewUsers: false,
      isDefault: false,
      order: 1,
    },
    {
      id: "2",
      createdAt: new Date(),
      updatedAt: new Date(),
      name: "Role 2",
      description: "Role 2 description",
      type: "app",
      assignToNewUsers: false,
      isDefault: false,
      order: 2,
    },
  ],
  userRole: [
    {
      id: "1",
      createdAt: new Date(),
      userId: "1",
      roleId: "1",
      tenantId: null,
    },
    {
      id: "2",
      createdAt: new Date(),
      userId: "2",
      roleId: "2",
      tenantId: null,
    },
    {
      id: "3",
      createdAt: new Date(),
      userId: "2",
      roleId: "1",
      tenantId: "1",
    },
    {
      id: "4",
      createdAt: new Date(),
      userId: "2",
      roleId: "2",
      tenantId: "1",
    },
  ],
  permission: [
    {
      id: "1",
      createdAt: new Date(),
      updatedAt: new Date(),
      name: "Admin Permission 1",
      description: "Admin Permission 1 description",
      type: "admin",
      isDefault: false,
      order: 1,
    },
    {
      id: "2",
      createdAt: new Date(),
      updatedAt: new Date(),
      name: "Admin Permission 2",
      description: "Admin Permission 2 description",
      type: "admin",
      isDefault: false,
      order: 2,
    },
    {
      id: "3",
      createdAt: new Date(),
      updatedAt: new Date(),
      name: "App Permission 1",
      description: "App Permission 1 description",
      type: "app",
      isDefault: false,
      order: 3,
    },
    {
      id: "4",
      createdAt: new Date(),
      updatedAt: new Date(),
      name: "App Permission 2",
      description: "App Permission 2 description",
      type: "app",
      isDefault: false,
      order: 4,
    },
  ],
  rolePermission: [
    {
      id: "1",
      roleId: "1",
      permissionId: "1",
    },
    {
      id: "2",
      roleId: "1",
      permissionId: "2",
    },
    {
      id: "3",
      roleId: "2",
      permissionId: "1",
    },
  ],
  checkoutSessionStatus: [
    {
      id: "1",
      createdAt: new Date(),
      updatedAt: new Date(),
      pending: true,
      email: "user@email.com",
      fromUrl: "https://example.com",
      fromUserId: null,
      fromTenantId: null,
      createdUserId: null,
      createdTenantId: null,
    },
    {
      id: "2",
      createdAt: new Date(),
      updatedAt: new Date(),
      pending: false,
      email: "user@email.com",
      fromUrl: "https://example.com",
      fromUserId: "1",
      fromTenantId: "1",
      createdUserId: "1",
      createdTenantId: "1",
    },
  ],
  subscriptionProduct: [
    {
      id: "1",
      stripeId: "stripe-id-1",
      order: 1,
      title: "Product 1",
      active: true,
      model: PricingModel.FLAT_RATE,
      public: true,
      groupTitle: null,
      groupDescription: null,
      description: "Description 1",
      badge: "Badge 1",
      billingAddressCollection: "auto",
      hasQuantity: false,
      canBuyAgain: true,
    },
    {
      id: "2",
      stripeId: "stripe-id-2",
      order: 2,
      title: "Product 2",
      active: true,
      model: PricingModel.FLAT_RATE,
      public: true,
      groupTitle: null,
      groupDescription: null,
      description: "Description 2",
      badge: "Badge 2",
      billingAddressCollection: "auto",
      hasQuantity: false,
      canBuyAgain: true,
    },
  ],
  subscriptionFeature: [
    {
      id: "1",
      subscriptionProductId: "1",
      order: 1,
      title: "Feature 1",
      name: "feature-1",
      type: SubscriptionFeatureLimitType.INCLUDED,
      value: 1,
      href: "https://example.com",
      badge: "Badge 1",
      accumulate: false,
    },
    {
      id: "2",
      subscriptionProductId: "1",
      order: 2,
      title: "Feature 2",
      name: "feature-2",
      type: SubscriptionFeatureLimitType.NOT_INCLUDED,
      value: 2,
      href: "https://example.com",
      badge: "Badge 2",
      accumulate: false,
    },
  ],
};

// Mutable mock data used in tests
export let mockDb: MockDataDto = { ...initialMockData };

// Reset function to restore initial state
export const resetMockDb = () => {
  mockDb = { ...initialMockData };
};
